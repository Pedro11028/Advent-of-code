package com.mycompany.day4_part1;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;


public class Day4_part1 {
    
        public static ArrayList<ArrayList<String>> LerDoficheiroCartoes(String path) throws FileNotFoundException{
            
        Scanner in = new Scanner(new File(path));
        ArrayList<ArrayList<String>> comments= new ArrayList<ArrayList<String>>();
        ArrayList<String> words = new ArrayList<String>();
        String[] line;
        String str;
        String [] values;
        
        while(in.hasNextLine()){
            str=in.nextLine();
            line = str.split("\\s+");
            values = line[2].split(" ");
            for(String word : values){
                words.add(word);
            }
        }

        comments.add(words);
        return comments;
        }

    public static void main(String[] args) throws FileNotFoundException, IOException{
     
    //Ler o ficheiro
    List<String> linesInFile = Files.readAllLines(Paths.get("C:/Users/Pedro/Desktop/input/day4_exemplo.txt"));
    // Criar um arraylist 2D
    List<List<String>> cartoes = new ArrayList<>(linesInFile.size());

    // Separar os valores do ficheiro com espaços
    linesInFile.forEach(line -> {
        // Recebe os valores de cada linha e guarda no array
        String[] elements = line.split("\\s+");
        cartoes.add(Arrays.asList(elements));
    });
    
    
   //Remove os numeros premiados do array dos cartões
   cartoes.remove(0);
   
   //Cria um arrayList para guardar os numeros que contêm os premeos
     List<String> guardarNumeros =  LerNumerosPremiados("C:/Users/Pedro/Desktop/input/day4_exemplo.txt");
    
//Percorre os numeros sorteados e verifica em cada um dos cartões se os valores têm o mesmo valor do numero atual
//Estou a tentar fazer com que remova os espaços vazios no array---Incompleto
vencedor GuardarUltimoNumero=new vencedor();
vencedor cartaoVencedor= new vencedor();
List<List<String>> cartoesVencedores = new ArrayList<>();

   cartoesVencedores=BuscarCartaoVencedor(cartoes, guardarNumeros, cartaoVencedor, GuardarUltimoNumero);
            
   cartoesVencedores=BuscarCartaoSorteado(cartoes, cartaoVencedor);
   
    cartoesVencedores.forEach(System.out::println);
    //Mostra no ecra o array dos cartões e os numeros premiados.
    System.out.println("----------------------------------------------------------------------");
    System.out.println(cartoesVencedores);
    System.out.println(GuardarUltimoNumero.ultimoNumero);
    System.out.println(cartaoVencedor.contCartao);
    }
    
    public static List<List<String>> BuscarCartaoVencedor(List<List<String>> cartoes, List<String>  guardarNumeros, vencedor cartaoVencedor, vencedor GuardarUltimoNumero){
        for(int i=0;i<guardarNumeros.size();i++){
        cartaoVencedor.contCartao=0;
            for(int x=0;x<cartoes.size();x++){
                 int ContadorPremiadosH=0;
                 int ContadorPremiadosV=0;
                 cartaoVencedor.contCartao+=1;
                 for(int z=0;z<cartoes.get(x).size();z++){
                    GuardarUltimoNumero.ultimoNumero= guardarNumeros.get(i); 
                    if(cartoes.get(x).get(z).equals(guardarNumeros.get(i)) ){
                        cartoes.get(x).set(z,"-1");
                    }
                    ContadorPremiadosH=BuscarContadorPremiadosH(cartoes, ContadorPremiadosH, x, z);
                    if(ContadorPremiadosH==5){
                      return cartoes;
                    }
                           ContadorPremiadosV=BuscarContadorPremiadosV(cartoes, ContadorPremiadosH);
                           if(ContadorPremiadosV==5){
                           return cartoes;
                           }
                     }
            }
    }   
            return null;
    }
     public static List<List<String>> BuscarCartaoSorteado(List<List<String>> cartoes, vencedor  cartaoVencedor){  
            int i=cartaoVencedor.contCartao;

            List<List<String>> output= new ArrayList<>();
            while(cartoes.get(i).get(0).equals(" ")==false){
                i-=1;
            }
             i+=1;
             
            while(cartoes.get(i).get(0).equals(" ")==false ){
                output.add(cartoes.get(i));
                i+=1;
            }
            return output;
     }
    public static int BuscarContadorPremiadosV(List<List<String>> cartoes, int  ContadorPremiadosV){
                         
        for (int j = 0; j < cartoes.size(); j++) { 
            for (int i = 0; i<cartoes.get(j).size(); i++) {
                if(cartoes.get(j).get(i).equals("-2")){
                if (cartoes.get(j).get(i+1).equals("-1")){
                   ContadorPremiadosV+=1;
                }
                }else if (cartoes.get(j).get(i).equals("-1")){
                ContadorPremiadosV+=1;
            }else
                    ContadorPremiadosV=0;
        }
            }

        return ContadorPremiadosV;
    }
    
    public static int BuscarContadorPremiadosH(List<List<String>> cartoes, int  ContadorPremiadosH, int x, int z){
        if(cartoes.get(x).size()==6){
            cartoes.get(x).set(0,"-2");
         }else if (cartoes.get(x).get(z).equals("-1")){
             ContadorPremiadosH+=1;
         }else{
             ContadorPremiadosH=0;
         }
        return ContadorPremiadosH;
    }
    public static  List<String> LerNumerosPremiados(String filePath) throws FileNotFoundException {
        File file = new File(filePath);
        Scanner scann = new Scanner(file);

         ArrayList<String> leituraFicheiro = new ArrayList<String>();

        while (scann.hasNextLine()) {

            leituraFicheiro.add(scann.nextLine());

        }

        List<String> output = new ArrayList<String>(Arrays.asList(leituraFicheiro.get(0).split(",")));
        return output;
    }
 }
